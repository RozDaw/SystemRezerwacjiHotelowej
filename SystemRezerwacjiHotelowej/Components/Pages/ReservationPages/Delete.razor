@page "/reservations/delete"
@inject SystemRezerwacjiHotelowej.Data.ApplicationDbContext DB
@using SystemRezerwacjiHotelowej.Components
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Reservation</h4>
    <hr />
    @if (reservation is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">DataMeldunku</dt>
            <dd class="col-sm-10">@reservation.DataMeldunku</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DataWymeldowania</dt>
            <dd class="col-sm-10">@reservation.DataWymeldowania</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CzyOplacona</dt>
            <dd class="col-sm-10">@reservation.CzyOplacona</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CzyZameldowany</dt>
            <dd class="col-sm-10">@reservation.CzyZameldowany</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Parking</dt>
            <dd class="col-sm-10">@reservation.Parking</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Animator</dt>
            <dd class="col-sm-10">@reservation.Animator</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LiczbaOsob</dt>
            <dd class="col-sm-10">@reservation.LiczbaOsob</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Cena</dt>
            <dd class="col-sm-10">@reservation.Cena</dd>
        </dl>
        <EditForm method="post" Model="reservation" OnValidSubmit="DeleteReservation" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(reservation is null)">Delete</button> |
            <a href="/reservations">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Reservation? reservation;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        reservation = await DB.Reservation.FirstOrDefaultAsync(m => m.Id == Id);

        if (reservation is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteReservation()
    {
        DB.Reservation.Remove(reservation!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/reservations");
    }
}
