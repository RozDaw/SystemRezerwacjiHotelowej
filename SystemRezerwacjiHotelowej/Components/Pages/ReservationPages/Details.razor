@page "/reservations/details"
@inject SystemRezerwacjiHotelowej.Data.ApplicationDbContext DB
@using SystemRezerwacjiHotelowej.Components
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Reservation</h4>
    <hr />
    @if (reservation is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">DataMeldunku</dt>
            <dd class="col-sm-10">@reservation.DataMeldunku</dd>
            <dt class="col-sm-2">DataWymeldowania</dt>
            <dd class="col-sm-10">@reservation.DataWymeldowania</dd>
            <dt class="col-sm-2">CzyOplacona</dt>
            <dd class="col-sm-10">@reservation.CzyOplacona</dd>
            <dt class="col-sm-2">CzyZameldowany</dt>
            <dd class="col-sm-10">@reservation.CzyZameldowany</dd>
            <dt class="col-sm-2">Parking</dt>
            <dd class="col-sm-10">@reservation.Parking</dd>
            <dt class="col-sm-2">Animator</dt>
            <dd class="col-sm-10">@reservation.Animator</dd>
            <dt class="col-sm-2">LiczbaOsob</dt>
            <dd class="col-sm-10">@reservation.LiczbaOsob</dd>
            <dt class="col-sm-2">Cena</dt>
            <dd class="col-sm-10">@reservation.Cena</dd>
        </dl>
        <div>
            <a href="@($"/reservations/edit?id={reservation.Id}")">Edit</a> |
            <a href="@($"/reservations")">Back to List</a>
        </div>
    }
</div>

@code {
    Reservation? reservation;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        reservation = await DB.Reservation.FirstOrDefaultAsync(m => m.Id == Id);

        if (reservation is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
